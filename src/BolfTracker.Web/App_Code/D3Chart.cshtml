@helper GenerateChart (string chartUrl, string menuUrl)
{
    <script type="text/javascript">
        /* Wimbledon 2012 - Player Bars */
        /* Copyright 2013 Peter Cook (prcweb); Licensed MIT */

        var barHeight = 20, width = 500, numPlayers = 3, parameter = '';
        var data = [], yScale = null;

        //// HELPER FUNCTIONS
        function px(s) {
            return s + 'px';
        }


        //// UI
        function getChart(d) {
            if (parameter === d)
                return;

            var generate=false;
            if (data == null || data.length == 0)
                generate = true;
            parameter = d;
            GetData(generate);
            return false;
        }


        //// D3
        function updateScale() {
            yScale = d3.scale.linear()
              .domain([0, d3.max(data, function (d) {
                  return d[parameter];
              })])
              .range([0, width]);
        }

        function updateChart(generate) {
            updateScale();
    
            if (generate)
                generateChart();
    
            d3.select('#chart')
              .selectAll('div.bar')
              .transition()
              .duration(1000)
              .style('width', function (d) {
                  return px(yScale(d[parameter]));
              });

            d3.select('#chart')
              .selectAll('div.value')
              .transition()
              .duration(1000)
              .tween("text", function (d) {
                  // Thanks to http://stackoverflow.com/questions/13454993/increment-svg-text-with-transistion
                  var i = d3.interpolate(this.textContent, d[parameter]);
                  return function (t) {
                      this.textContent = Math.round(i(t));
                  };
              });
        }

        function generateChart() {
            updateScale();

            var players = d3.select('#chart')
              .selectAll('div')
              .data(data)
              .enter()
              .append('div')
              .sort(function (a, b) {
                  return d3.descending(a[parameter], b[parameter]);
              })
              .classed('player', true)
              .style('top', function (d, i) {
                  return px(i * barHeight);
              });

            players.append('div')
              .classed('label', true)
              .text(function (d) {
                  return d.Name;
              });

            players.append('div')
              .classed('bar', true)
              .style('height', px(barHeight * 0.95))
              .style('width', function (d) {
                  return px(yScale(d[parameter]));
              });

            players.append('div')
              .classed('value', true)
              .text(function (d) { return (d[parameter]); });

        }

        function GetData(generate) {
            $.ajax({
                url: "@chartUrl",
                type: "GET",
                success: function (result) {
                    data=result;
                    updateChart(generate);
                },
                error: function (err) {
                    self.Result("An error occured while processing your request. Please try again later.");
                }
            });
        };

        
    </script>
}